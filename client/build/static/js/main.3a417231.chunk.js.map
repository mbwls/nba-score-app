{"version":3,"sources":["config/constants.js","components/DateNav/DateNav.js","components/ScoreCard/ScoreCard.js","components/GameList/GameList.js","components/GameDetails/DetailsHeader/DetailsHeader.js","components/GameDetails/GameDetails.js","utils/axios/axiosError.js","utils/axios/axiosRequest.js","actions/scoresViewAction.js","containers/ScoresView/ScoresView.js","app.js","reducers/scoresViewReducer.js","index.js","store/index.js"],"names":["APPCONST","REFERENCE","moment","app_url","server_url","window","location","hostname","TODAY","clone","startOf","YESTERDAY","subtract","TOMORROW","add","DateNav","props","_useState","useState","_useState2","Object","slicedToArray","loadedScoreData","setLoadedScoreData","setScoresDate","dateKey","format","days","i","weekStart","isoWeekday","push","react_default","a","createElement","Fragment","className","map","d","key","value","isSame","onClick","date_picker","defaultValue","placeholder","onChange","date","dateString","ScoreCard","loadedGameData","setLoadedGameData","undefined","gameData","_useState3","_useState4","loadedRefData","setLoadedRefData","dailyRefData","teamReferences","getTeamDataByID","teamID","_","find","id","iconKeyMapping","teamKey","homeTeamData","homeTeam","awayTeamData","awayTeam","homeWin","scoreData","homeScoreTotal","awayScoreTotal","concat","selectedGame","setSelectedGame","style","fontWeight","city","name","alt","width","height","src","abbreviation","GameList","keys","referenceData","length","scoresData","g","components_ScoreCard_ScoreCard","assign","schedule","score","DetailsHeader","GameDetails","GameDetails_DetailsHeader_DetailsHeader","axiosError","error","status","console","log","get","path","Promise","resolve","reject","axios","headers","Content-Type","Cache-Control","Pragma","Expires","Accept","then","response","catch","handleError","actionTypes","actionCreators","_ref","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","newDate","wrap","_context","prev","next","scoresView","abrupt","sent","data","success","type","payload","games","references","stop","_x","_x2","apply","this","arguments","Content","Layout","ScoresView","_this","layout","row","components_DateNav_DateNav","col","isEmpty","span","components_GameList_GameList","components_GameDetails_GameDetails","Component","connect","state","bindActionCreators","objectSpread","App","react_router_dom","basename","react_router","exact","component","initialState","reducer","action","store","reducers","middleware","thunk","logger","enhancers","devToolsExtension","rootReducer","combineReducers","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","es","app","document","getElementById"],"mappings":"0eACMA,EAAW,GACXC,EAAYC,MAElBF,EAASG,QAAU,YACnBH,EAASI,WAA0C,cAA7BC,OAAOC,SAASC,SAA2B,GAAK,yBACtEP,EAASQ,MAAQP,EAAUQ,QAAQC,QAAQ,OAC3CV,EAASW,UAAYV,EAAUQ,QAAQG,SAAS,EAAG,QAAQF,QAAQ,OACnEV,EAASa,SAAWZ,EAAUQ,QAAQK,IAAI,EAAG,QAAQJ,QAAQ,OAE9CV,iBCoEAe,UAxEC,SAAAC,GAAS,IAAAC,EACyBC,oBAAS,GADlCC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACdK,EADcH,EAAA,GACGI,EADHJ,EAAA,GAEhBG,IACDN,EAAMQ,cAActB,IAAOc,EAAMS,SAAShB,QAAQiB,OAAO,aACzDH,GAAmB,IAUvB,IAPA,IAAII,EAAO,GACPC,EAAI,EACJC,EAAY3B,IAAOc,EAAMS,SAASb,SAClCV,IAAOc,EAAMS,SAASK,aACtB,KAGGF,GAAK,GACRD,EAAKI,KACD7B,IAAO2B,GACFpB,QACAK,IAAIc,EAAG,MAEhBA,IAGJ,OACII,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,YACXJ,EAAAC,EAAAC,cAAA,UACKP,EAAKU,IAAI,SAAAC,GACN,OACIN,EAAAC,EAAAC,cAAA,MAAIK,IAAKrC,IAAOoC,GAAGZ,OAAO,eACtBM,EAAAC,EAAAC,cAAA,OACIM,MAAOF,EACPF,UACIE,EAAE5B,QAAQ,OAAO+B,OACbvC,IAAOc,EAAMS,SACRhB,QACAC,QAAQ,QAEX,0BACA,aAEVgC,QAAS,kBAAM1B,EAAMQ,cAAcc,KAElCA,EAAE5B,QAAQ,OAAO+B,OAAOzC,EAASQ,OAC5B,QACA8B,EACK5B,QAAQ,OACR+B,OAAOzC,EAASW,WACrB,YACA2B,EACK5B,QAAQ,OACR+B,OAAOzC,EAASa,UACrB,WACAX,IAAOoC,GAAGZ,OAAO,mBAO/CM,EAAAC,EAAAC,cAACS,EAAA,EAAD,CACIC,aAAc1C,IAAOc,EAAMS,SAAShB,QACpC2B,UAAU,WACVS,YAAY,GACZC,SAAU,SAACC,EAAMC,GACbhC,EAAMQ,cAAcwB,SC4BzBC,UA/FG,SAAAjC,GAAS,IAAAC,EAEqBC,oBAAS,GAF9BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAEhBiC,EAFgB/B,EAAA,GAEAgC,EAFAhC,EAAA,GAGlB+B,QAAqCE,IAAnBpC,EAAMqC,UACzBF,GAAkB,GAJC,IAAAG,EAMmBpC,oBAAS,GAN5BqC,EAAAnC,OAAAC,EAAA,EAAAD,CAAAkC,EAAA,GAMhBE,EANgBD,EAAA,GAMDE,EANCF,EAAA,GAOlBC,QAAuDJ,IAAtCpC,EAAM0C,aAAaC,gBACrCF,GAAiB,GAGrB,IAAMG,EAAkB,SAAAC,GACpB,OAAOC,IAAEC,KAAK/C,EAAM0C,aAAaC,eAAgB,CAAEK,GAAIH,KAGrDI,EAAiB,SAAAC,GACnB,OAAQA,GACJ,IAAK,MACD,MAAO,MACX,IAAK,MACD,MAAO,MACX,QACI,OAAOA,IAIbC,EAAeP,EAAgB5C,EAAMqC,SAASe,SAASJ,IACvDK,EAAeT,EAAgB5C,EAAMqC,SAASiB,SAASN,IACvDO,EACFvD,EAAMwD,UAAUC,eAAiBzD,EAAMwD,UAAUE,eAErD,OAAOlB,GAAiBN,EACpBlB,EAAAC,EAAAC,cAAA,OACIE,UAAS,aAAAuC,OACL3D,EAAM4D,aAAaZ,KAAOhD,EAAMqC,SAASW,GAAK,YAAc,IAEhEtB,QAAS,kBAAM1B,EAAM6D,gBAAgB7D,EAAMqC,YAE1Cc,GAAgBE,GAAgBrD,EAAMwD,UACnCxC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACIH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,QACIE,UAAU,YACV0C,MAAQP,EAAmC,KAAzB,CAAEQ,WAAY,SAFpC,GAAAJ,OAIQN,EAAaW,KAJrB,KAAAL,OAI6BN,EAAaY,OAE1CjD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OACIgD,IAAI,YACJC,MAAO,GACPC,OAAQ,GACRC,IAAG,sDAAAV,OAAwDV,EACvDI,EAAaiB,cADd,YAOftD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,cACXJ,EAAAC,EAAAC,cAAA,QAAM4C,MAAQP,EAAmC,KAAzB,CAAEQ,WAAY,SACjC/D,EAAMwD,UAAUE,gBAErB1C,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,QAAM4C,MAAOP,EAAU,CAAEQ,WAAY,QAAW,MAC3C/D,EAAMwD,UAAUC,gBAErBzC,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,QAAME,UAAU,aAAhB,UAGJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OACIgD,IAAI,YACJC,MAAO,GACPC,OAAQ,GACRC,IAAG,sDAAAV,OAAwDV,EACvDE,EAAamB,cADd,WAKXtD,EAAAC,EAAAC,cAAA,QACIE,UAAU,YACV0C,MAAOP,EAAU,CAAEQ,WAAY,QAAW,MAF9C,GAAAJ,OAIQR,EAAaa,KAJrB,KAAAL,OAI6BR,EAAac,SAIlD,MAER,OCtEOM,UAtBE,SAAAvE,GAAS,IAAAC,EACoBC,oBAAS,GAD7BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACfuC,EADerC,EAAA,GACAsC,EADAtC,EAAA,GAKtB,OAHKqC,GAAiBpC,OAAOoE,KAAKxE,EAAMyE,eAAeC,OAAS,GAC5DjC,GAAiB,GAEdD,EACHxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aACVpB,EAAM2E,WAAWtD,IAAI,SAAAuD,GAClB,OACI5D,EAAAC,EAAAC,cAAC2D,EAADzE,OAAA0E,OAAA,GACQ9E,EADR,CAEIuB,IAAKqD,EAAEG,SAAS/B,GAChBX,SAAUuC,EAAEG,SACZvB,UAAWoB,EAAEI,MACbtC,aAAc1C,EAAMyE,oBAKpC,OCQOQ,iBA5BO,SAAAjF,GAClB,OACIgB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,kBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OACImD,IAAI,6DACJF,MAAM,MACNC,OAAO,MACPF,IAAI,qBAERlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAf,qBAEJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,WAGAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAAA,OACImD,IAAI,6DACJF,MAAM,MACNC,OAAO,MACPF,IAAI,qBAERlD,EAAAC,EAAAC,cAAA,OAAKE,UAAU,oBAAf,0BCbD8D,EARK,SAAAlF,GAChB,OACIgB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACiE,EAAkBnF,0ECPhBoF,EAAA,SAAAC,GAAS,IACZC,EAAWD,EAAXC,OACR,OAAQA,GACJ,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACL,KAAK,IACD,OAAOC,QAAQC,IAAR,GAAA7B,OAAe2B,EAAf,WAAgCD,GAC3C,QACI,MAAO,mBCYNI,EAAM,SAAAC,GACf,OAAO,IAAIC,QAAQ,SAACC,EAASC,GACzBC,IACKL,IADL,GAAA9B,OACY3E,EAASI,YADrBuE,OACkC+B,GArBhB,CACtBK,QAAS,CACLC,eAAgB,oCAChBC,gBAAiB,sCACjBC,OAAQ,WACRC,QAAS,EACTC,OAAQ,sBAgBHC,KAAK,SAAAC,GACFV,EAAQU,KAEXC,MAAM,SAAAlB,GACHQ,EAAOW,EAAYnB,EAAMiB,gBCtB5BG,EALc,uBAKdA,EAHS,kBAGTA,EAFW,oBAEXA,EAJoB,yBAWpBC,EAAiB,CAC1BlG,cAAe,SAAAwB,GAAU,sBAAA2E,EAAAvG,OAAAwG,EAAA,EAAAxG,CAAAyG,EAAA5F,EAAA6F,KAAI,SAAAC,EAAOC,EAAUC,GAAjB,IAAAC,EAAAZ,EAAA,OAAAO,EAAA5F,EAAAkG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACnBJ,EAAUhI,IAAO8C,GAAYtB,WAG/BxB,IAAO+H,IAAWM,WAAW9G,SACxBhB,QACAC,QAAQ,OACR+B,OACGvC,IAAOgI,GACFzH,QACAC,QAAQ,SAErBuH,IAAWM,WAAW5C,WAAWD,OAAS,GAZrB,CAAA0C,EAAAE,KAAA,eAAAF,EAAAI,OAAA,wBAAAJ,EAAAE,KAAA,EAgBJ7B,EAAG,6CAAA9B,OACyBzE,IAAOgI,GAC/CzH,QACAiB,OAAO,cAnBS,QAgBrB4F,EAhBqBc,EAAAK,MAqBZC,KAAKC,UACdX,EAAS,CAAEY,KAjCD,kBAiCsBC,QAASX,IACzCF,EAAS,CACLY,KArCW,uBAsCXC,QAASvB,EAASoB,KAAKA,KAAKI,QAEhCd,EAAS,CACLY,KAxCiB,yBAyCjBC,QAASvB,EAASoB,KAAKA,KAAKK,cA7BX,wBAAAX,EAAAY,SAAAjB,MAAJ,gBAAAkB,EAAAC,GAAA,OAAAvB,EAAAwB,MAAAC,KAAAC,YAAA,IAkCzBxE,gBAAiB,SAAAxB,GAAQ,OAAI,SAAC2E,EAAUC,GACpCD,EAAS,CACLY,KA9CY,oBA+CZC,QAASxF,OCxCbiG,EAAYC,IAAZD,QAEFE,mLACO,IAAAC,EAAAL,KACL,OACIpH,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACXJ,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACI1H,EAAAC,EAAAC,cAACoH,EAAD,KACItH,EAAAC,EAAAC,cAACwH,EAAA,EAAD,KACI1H,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAKvH,UAAU,sBACXJ,EAAAC,EAAAC,cAAC0H,EAAYR,KAAKpI,QAEtBgB,EAAAC,EAAAC,cAACyH,EAAA,EAAD,CAAKvH,UAAU,oBACXJ,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CACIzH,UAAS,qCAAAuC,OACLb,IAAEgG,QAAQV,KAAKpI,MAAM4D,cACf,QACA,IAEVmF,KAAM,IAEN/H,EAAAC,EAAAC,cAAC8H,EAAaZ,KAAKpI,QAEvBgB,EAAAC,EAAAC,cAAC2H,EAAA,EAAD,CACIzH,UAAU,wCACV2H,KAAM,IAEN/H,EAAAC,EAAAC,cAAA,UACIE,UAAU,gBACVM,QAAS,kBACL+G,EAAKzI,MAAM6D,gBAAgB,OAGnC7C,EAAAC,EAAAC,cAAC+H,EAAgBb,KAAKpI,oBA/BjCkJ,aA0CVC,cACX,SAAAC,GACI,OAAOA,EAAM7B,YAEjB,SAAAP,GAAQ,OAAIqC,YAAmBjJ,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAKsG,GAAkBM,IAJ3CmC,CAKbX,GC5Cae,MAdf,WACI,OACIvI,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACXJ,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAeC,SAAS,cACpBzI,EAAAC,EAAAC,cAACwI,EAAA,EAAD,KACI1I,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOC,OAAK,EAACjE,KAAK,UAAUkE,UAAWpB,IACvCxH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOC,OAAK,EAACjE,KAAK,kBAClB1E,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAOE,UAAWpB,0BCRhCqB,EAAe,CACjBpJ,QAASvB,IAAO,YAChByF,WAAY,GACZF,cAAe,GACfb,aAAc,IAGLkG,EAAU,WAAkC,IAAjCV,EAAiCf,UAAA3D,OAAA,QAAAtC,IAAAiG,UAAA,GAAAA,UAAA,GAAzBwB,EAAcE,EAAW1B,UAAA3D,OAAA,EAAA2D,UAAA,QAAAjG,EACrD,OAAQ2H,EAAOnC,MACX,KAAKnB,EACD,OAAOrG,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAKgJ,EAAZ,CAAmB3I,QAASsJ,EAAOlC,UACvC,KAAKpB,EACD,OAAOrG,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAKgJ,EAAZ,CAAmBzE,WAAYoF,EAAOlC,UAC1C,KAAKpB,EACD,OAAOrG,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAKgJ,EAAZ,CAAmB3E,cAAesF,EAAOlC,UAC7C,KAAKpB,EACD,OAAOrG,OAAAkJ,EAAA,EAAAlJ,CAAA,GAAKgJ,EAAZ,CAAmBxF,aAAcmG,EAAOlC,UAC5C,QACI,OAAOuB,ICbbY,GCHiB,WAEnB,IAAMC,EAAW,CACb1C,WAAYiB,GAIV0B,EAAa,CAACC,IAAOC,UAGrBC,EAAY,GAEI,qBAAXhL,QAA0BA,OAAOiL,mBACxCD,EAAUtJ,KAAK1B,OAAOiL,qBAE1B,IAAMC,EAAcC,YAAgBpK,OAAAkJ,EAAA,EAAAlJ,CAAA,GAC7B6J,IAWP,OARcQ,YACVF,EACAG,IAAOvC,WAAP,GACIwC,IAAexC,WAAf,EAAmB+B,IADvBvG,OAEO0G,KDpBDO,GAEdC,IAASC,OACL9J,EAAAC,EAAAC,cAAC6J,EAAA,EAAD,CAAUf,MAAOA,IACbhJ,EAAAC,EAAAC,cAAC8J,EAAD,OAEJC,SAASC,eAAe","file":"static/js/main.3a417231.chunk.js","sourcesContent":["import moment from 'moment';\r\nconst APPCONST = {};\r\nconst REFERENCE = moment();\r\n\r\nAPPCONST.app_url = 'nba-score';\r\nAPPCONST.server_url = window.location.hostname !== 'localhost' ? '' : 'http://localhost:3005/';\r\nAPPCONST.TODAY = REFERENCE.clone().startOf('day');\r\nAPPCONST.YESTERDAY = REFERENCE.clone().subtract(1, 'days').startOf('day');\r\nAPPCONST.TOMORROW = REFERENCE.clone().add(1, 'days').startOf('day');\r\n\r\nexport default APPCONST;","import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport APPCONST from '../../config/constants';\r\nimport { DatePicker } from 'antd';\r\nimport './DateNav.css';\r\n\r\nconst DateNav = props => {\r\n    const [loadedScoreData, setLoadedScoreData] = useState(false);\r\n    if (!loadedScoreData) {\r\n        props.setScoresDate(moment(props.dateKey).clone().format('YYYYMMDD'));\r\n        setLoadedScoreData(true);\r\n    }\r\n    \r\n    let days = [],\r\n        i = 1;\r\n    let weekStart = moment(props.dateKey).subtract(\r\n        moment(props.dateKey).isoWeekday(),\r\n        'd'\r\n    );\r\n\r\n    while (i <= 7) {\r\n        days.push(\r\n            moment(weekStart)\r\n                .clone()\r\n                .add(i, 'd')\r\n        );\r\n        i++;\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <nav className='date-nav'>\r\n                <ul>\r\n                    {days.map(d => {\r\n                        return (\r\n                            <li key={moment(d).format('YYYY-MM-DD')}>\r\n                                <div\r\n                                    value={d}\r\n                                    className={\r\n                                        d.startOf('day').isSame(\r\n                                            moment(props.dateKey)\r\n                                                .clone()\r\n                                                .startOf('day')\r\n                                        )\r\n                                            ? 'current-date date-label'\r\n                                            : 'date-label'\r\n                                    }\r\n                                    onClick={() => props.setScoresDate(d)}\r\n                                >\r\n                                    {d.startOf('day').isSame(APPCONST.TODAY)\r\n                                        ? 'Today'\r\n                                        : d\r\n                                              .startOf('day')\r\n                                              .isSame(APPCONST.YESTERDAY)\r\n                                        ? 'Yesterday'\r\n                                        : d\r\n                                              .startOf('day')\r\n                                              .isSame(APPCONST.TOMORROW)\r\n                                        ? 'Tomorrow'\r\n                                        : moment(d).format('ddd D MMM')}\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </nav>\r\n            <DatePicker\r\n                defaultValue={moment(props.dateKey).clone()}\r\n                className='date-btn'\r\n                placeholder=''\r\n                onChange={(date, dateString) => {\r\n                    props.setScoresDate(dateString);\r\n                }}\r\n            />\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default DateNav;\r\n","import React, { useState } from 'react';\r\nimport _ from 'lodash';\r\nimport './ScoreCard.css';\r\n\r\nconst ScoreCard = props => {\r\n    /* START HOOKS */\r\n    const [loadedGameData, setLoadedGameData] = useState(false);\r\n    if (!loadedGameData && props.gameData !== undefined)\r\n        setLoadedGameData(true);\r\n\r\n    const [loadedRefData, setLoadedRefData] = useState(false);\r\n    if (!loadedRefData && props.dailyRefData.teamReferences !== undefined)\r\n        setLoadedRefData(true);\r\n    /* END HOOKS */\r\n\r\n    const getTeamDataByID = teamID => {\r\n        return _.find(props.dailyRefData.teamReferences, { id: teamID });\r\n    };\r\n\r\n    const iconKeyMapping = teamKey => {\r\n        switch (teamKey) {\r\n            case 'BRO':\r\n                return 'BKN';\r\n            case 'OKL':\r\n                return 'OKC';\r\n            default:\r\n                return teamKey;\r\n        }\r\n    };\r\n\r\n    const homeTeamData = getTeamDataByID(props.gameData.homeTeam.id);\r\n    const awayTeamData = getTeamDataByID(props.gameData.awayTeam.id);\r\n    const homeWin =\r\n        props.scoreData.homeScoreTotal > props.scoreData.awayScoreTotal;\r\n\r\n    return loadedRefData && loadedGameData ? (\r\n        <div\r\n            className={`score-card${\r\n                props.selectedGame.id === props.gameData.id ? ' selected' : ''\r\n            }`}\r\n            onClick={() => props.setSelectedGame(props.gameData)}\r\n        >\r\n            {homeTeamData && awayTeamData && props.scoreData ? (\r\n                <React.Fragment>\r\n                    <div className='team-info away'>\r\n                        <span\r\n                            className='team-name'\r\n                            style={!homeWin ? { fontWeight: 'bold' } : null}\r\n                        >\r\n                            {`${awayTeamData.city} ${awayTeamData.name}`}\r\n                        </span>\r\n                        <div className='icon-wrapper'>\r\n                            <img\r\n                                alt='away-logo'\r\n                                width={45}\r\n                                height={45}\r\n                                src={`https://www.nba.com/assets/logos/teams/primary/web/${iconKeyMapping(\r\n                                    awayTeamData.abbreviation\r\n                                )}.svg`}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className='game-score'>\r\n                        <span style={!homeWin ? { fontWeight: 'bold' } : null}>\r\n                            {props.scoreData.awayScoreTotal}\r\n                        </span>\r\n                        <span> - </span>\r\n                        <span style={homeWin ? { fontWeight: 'bold' } : null}>\r\n                            {props.scoreData.homeScoreTotal}\r\n                        </span>\r\n                        <br />\r\n                        <span className='game-time'>Final</span>\r\n                    </div>\r\n\r\n                    <div className='team-info home'>\r\n                        <div className='icon-wrapper'>\r\n                            <img\r\n                                alt='home-logo'\r\n                                width={45}\r\n                                height={45}\r\n                                src={`https://www.nba.com/assets/logos/teams/primary/web/${iconKeyMapping(\r\n                                    homeTeamData.abbreviation\r\n                                )}.svg`}\r\n                            />\r\n                        </div>\r\n                        <span\r\n                            className='team-name'\r\n                            style={homeWin ? { fontWeight: 'bold' } : null}\r\n                        >\r\n                            {`${homeTeamData.city} ${homeTeamData.name}`}\r\n                        </span>\r\n                    </div>\r\n                </React.Fragment>\r\n            ) : null}\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default ScoreCard;\r\n","import React, { useState } from 'react';\r\nimport ScoreCard from '../ScoreCard/ScoreCard';\r\nimport './GameList.css';\r\n\r\nconst GameList = props => {\r\n    const [loadedRefData, setLoadedRefData] = useState(false);\r\n    if (!loadedRefData && Object.keys(props.referenceData).length > 0)\r\n        setLoadedRefData(true);\r\n\r\n    return loadedRefData ? (\r\n        <div className='game-list'>\r\n            {props.scoresData.map(g => {\r\n                return (\r\n                    <ScoreCard\r\n                        {...props}\r\n                        key={g.schedule.id}\r\n                        gameData={g.schedule}\r\n                        scoreData={g.score}\r\n                        dailyRefData={props.referenceData}\r\n                    />\r\n                );\r\n            })}\r\n        </div>\r\n    ) : null;\r\n};\r\n\r\nexport default GameList;\r\n","import React from 'react';\r\nimport './DetailsHeader.css';\r\n\r\nconst DetailsHeader = props => {\r\n    return (\r\n        <div className='details-header'>\r\n            <div className='header-logo'>\r\n                <img\r\n                    src='https://www.nba.com/assets/logos/teams/primary/web/DAL.svg'\r\n                    width='160'\r\n                    height='120'\r\n                    alt='away-team-header'\r\n                />\r\n                <div className='header-team-name'>Dallas Mavericks</div>\r\n            </div>\r\n            <div className='header-score'>\r\n                91 - 84\r\n            </div>\r\n            <div className='header-logo'>\r\n                <img\r\n                    src='https://www.nba.com/assets/logos/teams/primary/web/WAS.svg'\r\n                    width='160'\r\n                    height='120'\r\n                    alt='home-team-header'\r\n                />\r\n                <div className='header-team-name'>Washington Wizards</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DetailsHeader;\r\n","import React from 'react';\r\nimport './GameDetails.css';\r\nimport DetailsHeader from './DetailsHeader/DetailsHeader';\r\n\r\nconst GameDetails = props => {\r\n    return (\r\n        <div className='game-details'>\r\n            <DetailsHeader {...props} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GameDetails;\r\n","export default error => {\r\n    const { status } = error;\r\n    switch (status) {\r\n        case 400:\r\n        case 401:\r\n        case 403:\r\n        case 404:\r\n        case 500:\r\n            return console.log(`${status} error!`, error);\r\n        default:\r\n            return 'frontend error';\r\n    }\r\n};\r\n","import axios from 'axios';\r\nimport handleError from './axiosError';\r\nimport APPCONST from '../../config/constants';\r\n\r\nconst getHeaders = () => ({\r\n    headers: {\r\n        'Content-Type': 'application/x-www-form-urlencoded',\r\n        'Cache-Control': 'no-cache, no-store, must-revalidate',\r\n        Pragma: 'no-cache',\r\n        Expires: 0,\r\n        Accept: 'application/json'\r\n    }\r\n});\r\n\r\nconst getFormHeaders = () => ({\r\n    headers: {\r\n        Accept: 'application/json',\r\n        'Content-Type': 'multipart/form-data'\r\n    }\r\n});\r\n\r\n// HTTP GET Request - Returns Resolved or Rejected Promise\r\nexport const get = path => {\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .get(`${APPCONST.server_url}${path}`, getHeaders())\r\n            .then(response => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(handleError(error.response));\r\n            });\r\n    });\r\n};\r\n\r\n// HTTP POST Request - Returns Resolved or Rejected Promise\r\nexport const post = (path, data, formdata = false) => {\r\n    let head = formdata ? getFormHeaders() : getHeaders();\r\n    return new Promise((resolve, reject) => {\r\n        axios\r\n            .post(`${APPCONST.server_url}${path}`, data, head)\r\n            .then(response => {\r\n                resolve(response);\r\n            })\r\n            .catch(error => {\r\n                reject(handleError(error.response));\r\n            });\r\n    });\r\n};\r\n","import { get } from '../utils//axios/axiosRequest';\r\nimport moment from 'moment';\r\n\r\nconst requestDailyScores = 'REQUEST_DAILY_SCORES';\r\nconst updateDailyReferenceData = 'UPDATE_DAILY_REFERENCE';\r\nconst setScoresDate = 'SET_SCORES_DATE';\r\nconst setSelectedGame = 'SET_SELECTED_GAME';\r\n\r\nexport const actionTypes = {\r\n    requestDailyScores,\r\n    setScoresDate,\r\n    setSelectedGame,\r\n    updateDailyReferenceData\r\n};\r\n\r\nexport const actionCreators = {\r\n    setScoresDate: dateString => async (dispatch, getState) => {\r\n        const newDate = moment(dateString).format();\r\n\r\n        if (\r\n            moment(getState().scoresView.dateKey)\r\n                .clone()\r\n                .startOf('day')\r\n                .isSame(\r\n                    moment(newDate)\r\n                        .clone()\r\n                        .startOf('day')\r\n                ) &&\r\n            getState().scoresView.scoresData.length > 0\r\n        )\r\n            return;\r\n\r\n        let response = await get(\r\n            `nba-scores/nba-data/getDailyScoresRS?date=${moment(newDate)\r\n                .clone()\r\n                .format('YYYYMMDD')}`\r\n        );\r\n        if (response.data.success) {\r\n            dispatch({ type: setScoresDate, payload: newDate });\r\n            dispatch({\r\n                type: requestDailyScores,\r\n                payload: response.data.data.games\r\n            });\r\n            dispatch({\r\n                type: updateDailyReferenceData,\r\n                payload: response.data.data.references\r\n            });\r\n        }\r\n    },\r\n\r\n    setSelectedGame: gameData => (dispatch, getState) => {\r\n        dispatch({\r\n            type: setSelectedGame,\r\n            payload: gameData\r\n        });\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport { Layout, Row, Col } from 'antd';\r\nimport DateNav from '../../components/DateNav/DateNav';\r\nimport GameList from '../../components/GameList/GameList';\r\nimport GameDetails from '../../components/GameDetails/GameDetails';\r\nimport 'antd/dist/antd.css';\r\nimport './ScoresView.css';\r\n\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport { actionCreators } from '../../actions/scoresViewAction';\r\n\r\nconst { Content } = Layout;\r\n\r\nclass ScoresView extends Component {\r\n    render() {\r\n        return (\r\n            <div className='scores-view'>\r\n                <Layout>\r\n                    <Content>\r\n                        <Layout>\r\n                            <Row className='header-content-row'>\r\n                                <DateNav {...this.props} />\r\n                            </Row>\r\n                            <Row className='main-content-row'>\r\n                                <Col\r\n                                    className={`main-content-col content-game-list${\r\n                                        _.isEmpty(this.props.selectedGame)\r\n                                            ? ' open'\r\n                                            : ''\r\n                                    }`}\r\n                                    span={11}\r\n                                >\r\n                                    <GameList {...this.props} />\r\n                                </Col>\r\n                                <Col\r\n                                    className='main-content-col content-game-details'\r\n                                    span={13}\r\n                                >\r\n                                    <button\r\n                                        className='close-details'\r\n                                        onClick={() =>\r\n                                            this.props.setSelectedGame({})\r\n                                        }\r\n                                    />\r\n                                    <GameDetails {...this.props} />\r\n                                </Col>\r\n                            </Row>\r\n                        </Layout>\r\n                    </Content>\r\n                </Layout>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => {\r\n        return state.scoresView;\r\n    },\r\n    dispatch => bindActionCreators({ ...actionCreators }, dispatch)\r\n)(ScoresView);\r\n","import React from 'react';\r\nimport { Switch, Route, BrowserRouter } from 'react-router-dom';\r\nimport ScoresView from './containers/ScoresView/ScoresView';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className='App'>\r\n            <BrowserRouter basename='nba-scores'>\r\n                <Switch>\r\n                    <Route exact path='/scores' component={ScoresView} />\r\n                    <Route exact path='/game/:gameID' />\r\n                    <Route component={ScoresView} />\r\n                </Switch>\r\n            </BrowserRouter>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import moment from 'moment';\r\nimport { actionTypes } from '../actions/scoresViewAction';\r\n\r\nconst initialState = {\r\n    dateKey: moment('20190306'),\r\n    scoresData: [],\r\n    referenceData: [],\r\n    selectedGame: {}\r\n};\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.setScoresDate:\r\n            return { ...state, dateKey: action.payload };\r\n        case actionTypes.requestDailyScores:\r\n            return { ...state, scoresData: action.payload };\r\n        case actionTypes.updateDailyReferenceData:\r\n            return { ...state, referenceData: action.payload };\r\n        case actionTypes.setSelectedGame:\r\n            return { ...state, selectedGame: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './app';\r\nimport configureStore from './store';\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { logger } from 'redux-logger';\r\nimport * as ScoresView from '../reducers/scoresViewReducer';\r\n\r\nconst configureStore = () => {\r\n    // ALL REDUCERS FOR APP\r\n    const reducers = {\r\n        scoresView: ScoresView.reducer\r\n    };\r\n\r\n    // LOGGER FOR DEV PURPOSES\r\n    const middleware = [thunk, logger];\r\n\r\n    // In development, use the browser's Redux dev tools extension if installe\r\n    const enhancers = [];\r\n\r\n    if (typeof window !== 'undefined' && window.devToolsExtension)\r\n        enhancers.push(window.devToolsExtension());\r\n\r\n    const rootReducer = combineReducers({\r\n        ...reducers\r\n    });\r\n\r\n    const store = createStore(\r\n        rootReducer,\r\n        compose(\r\n            applyMiddleware(...middleware),\r\n            ...enhancers\r\n        )\r\n    );\r\n\r\n    return store;\r\n};\r\n\r\nexport default configureStore;\r\n"],"sourceRoot":""}